{"ast":null,"code":"import axios from '../../axios';\nimport * as actionTypes from './actionTypes'; // Pass in a username and 'true' to get followers or 'false' to get following\n\nexport const getFollowers = (user, getFollowers) => {\n  return dispatch => {\n    dispatch(getFollowersStart());\n    let url;\n\n    if (getFollowers) {\n      url = 'user/' + user + '/followers';\n    } else {\n      url = 'user/' + user + '/following';\n    }\n\n    axios.get(url).then(response => {\n      console.log(\"getFollowers: \\n\" + JSON.stringify(response.data));\n      dispatch(getFollowersSuccess(response.data));\n    }).catch(err => {\n      //console.log(err.response); //more detailed error info\n      console.log(err.response);\n      dispatch(getFollowersFail(err));\n    });\n  };\n};\nexport const getFollowersStart = () => {\n  return {\n    type: actionTypes.GET_FOLLOWERS_START\n  };\n};\nexport const getFollowersSuccess = data => {\n  return {\n    type: actionTypes.GET_FOLLOWERS_SUCCESS,\n    followers: data\n  };\n};\nexport const getFollowersFail = error => {\n  return {\n    type: actionTypes.GET_FOLLOWERS_FAIL,\n    error: error\n  };\n};","map":{"version":3,"sources":["/home/karl/vscode/recipe-app/src/store/actions/getFollowers.js"],"names":["axios","actionTypes","getFollowers","user","dispatch","getFollowersStart","url","get","then","response","console","log","JSON","stringify","data","getFollowersSuccess","catch","err","getFollowersFail","type","GET_FOLLOWERS_START","GET_FOLLOWERS_SUCCESS","followers","error","GET_FOLLOWERS_FAIL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAOD,YAAP,KAAwB;AAChD,SAAOE,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AAEA,QAAIC,GAAJ;;AACA,QAAIJ,YAAJ,EAAkB;AACdI,MAAAA,GAAG,GAAG,UAAUH,IAAV,GAAiB,YAAvB;AACH,KAFD,MAEO;AACHG,MAAAA,GAAG,GAAG,UAAUH,IAAV,GAAiB,YAAvB;AACH;;AAEDH,IAAAA,KAAK,CAACO,GAAN,CAAUD,GAAV,EACKE,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBC,IAAI,CAACC,SAAL,CAAeJ,QAAQ,CAACK,IAAxB,CAAjC;AACAV,MAAAA,QAAQ,CAACW,mBAAmB,CAACN,QAAQ,CAACK,IAAV,CAApB,CAAR;AACH,KAJL,EAKKE,KALL,CAKWC,GAAG,IAAI;AACV;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACR,QAAhB;AACAL,MAAAA,QAAQ,CAACc,gBAAgB,CAACD,GAAD,CAAjB,CAAR;AACH,KATL;AAUH,GApBD;AAqBH,CAtBM;AAwBP,OAAO,MAAMZ,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACHc,IAAAA,IAAI,EAAElB,WAAW,CAACmB;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAML,mBAAmB,GAAID,IAAD,IAAU;AACzC,SAAO;AACHK,IAAAA,IAAI,EAAElB,WAAW,CAACoB,qBADf;AAEHC,IAAAA,SAAS,EAAER;AAFR,GAAP;AAIH,CALM;AAOP,OAAO,MAAMI,gBAAgB,GAAIK,KAAD,IAAW;AACvC,SAAO;AACHJ,IAAAA,IAAI,EAAElB,WAAW,CAACuB,kBADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM","sourcesContent":["import axios from '../../axios';\nimport * as actionTypes from './actionTypes';\n\n// Pass in a username and 'true' to get followers or 'false' to get following\nexport const getFollowers = (user, getFollowers) => {\n    return dispatch => {\n        dispatch(getFollowersStart());\n\n        let url;\n        if (getFollowers) {\n            url = 'user/' + user + '/followers';\n        } else {\n            url = 'user/' + user + '/following';\n        }\n\n        axios.get(url)\n            .then(response => {\n                console.log(\"getFollowers: \\n\" + JSON.stringify(response.data));\n                dispatch(getFollowersSuccess(response.data));\n            })\n            .catch(err => {\n                //console.log(err.response); //more detailed error info\n                console.log(err.response);\n                dispatch(getFollowersFail(err));\n            });\n    };\n};\n\nexport const getFollowersStart = () => {\n    return {\n        type: actionTypes.GET_FOLLOWERS_START\n    };\n};\n\nexport const getFollowersSuccess = (data) => {\n    return {\n        type: actionTypes.GET_FOLLOWERS_SUCCESS,\n        followers: data,\n    };\n};\n\nexport const getFollowersFail = (error) => {\n    return {\n        type: actionTypes.GET_FOLLOWERS_FAIL,\n        error: error\n    };\n};\n"]},"metadata":{},"sourceType":"module"}