{"ast":null,"code":"var _jsxFileName = \"/home/karl/vscode/recipe-app/src/UI/Modal/Modal.js\";\nimport React, { Component } from 'react';\nimport classes from './Modal.module.css';\nimport Aux from '../../UI/AuxFolder/Auxiliary';\nimport Backdrop from '../Backdrop/Backdrop';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom'; // Same as Aux class, just outputting child elements\n\nclass Modal extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.show !== this.props.show;\n  }\n\n  componentDidMount() {}\n\n  render() {\n    let output; // If recipe is passed in as props we assign values to output\n\n    let recipe, ingredients, tags;\n\n    if (this.props.recipe) {\n      recipe = this.props.recipe;\n      ingredients = this.props.recipe.ingredients.map(ingredient => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, ingredient));\n      tags = this.props.recipe.tags.map(tag => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, tag));\n      output = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, recipe.name), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, \"Prep Time: \", recipe.time_hours, \" hours, \", recipe.time_minutes, \" minutes \"), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, \"Ingredients:\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, ingredients), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, recipe.instructions), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, \"Tags:\"), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, tags));\n    }\n\n    if (this.props.showFollowers) {\n      if (this.props.followers) {\n        output = this.props.followers.results.map(follower => /*#__PURE__*/React.createElement(\"li\", {\n          className: classes.FollowerListItem,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(NavLink, {\n          to: \"/user/\" + follower.username,\n          onClick: this.props.closed,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: follower.profile_pic,\n          alt: \"profile-pic\",\n          className: classes.FollowerPic,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }\n        }), \" \\xA0\", follower.username, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 143\n          }\n        }))));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Backdrop, {\n      show: this.props.show,\n      clicked: this.props.closed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Modal //show element or just slide it off the screen\n      ,\n      style: {\n        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n        opacity: this.props.show ? '1' : '0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, output));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    followers: state.getFollowers.followers,\n    followersLoading: state.getFollowers.loading\n  };\n};\n\nexport default connect(mapStateToProps)(Modal);","map":{"version":3,"sources":["/home/karl/vscode/recipe-app/src/UI/Modal/Modal.js"],"names":["React","Component","classes","Aux","Backdrop","connect","NavLink","Modal","shouldComponentUpdate","nextProps","nextState","show","props","componentDidMount","render","output","recipe","ingredients","tags","map","ingredient","tag","name","time_hours","time_minutes","instructions","showFollowers","followers","results","follower","FollowerListItem","username","closed","profile_pic","FollowerPic","transform","opacity","mapStateToProps","state","getFollowers","followersLoading","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './Modal.module.css'\nimport Aux from '../../UI/AuxFolder/Auxiliary';\nimport Backdrop from '../Backdrop/Backdrop';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\n// Same as Aux class, just outputting child elements\nclass Modal extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.show !== this.props.show;\n    }\n\n    componentDidMount() {\n        \n    }\n\n    render() {\n        let output;\n\n        // If recipe is passed in as props we assign values to output\n        let recipe, ingredients, tags;\n        if (this.props.recipe) {\n            recipe = this.props.recipe;\n        \n            ingredients = this.props.recipe.ingredients.map(ingredient => (\n                <li>{ingredient}</li>\n                ));\n\n            tags = this.props.recipe.tags.map(tag => (\n                <li>{tag}</li>\n                ));\n\n            output = (\n                <div>\n                    <h2>{recipe.name}</h2>\n                    <h3>Prep Time: {recipe.time_hours} hours, {recipe.time_minutes} minutes </h3>\n                    <h3>Ingredients:</h3>\n                    <ul>\n                        {ingredients}\n                    </ul>\n                    <h3>Instructions</h3>\n                    <p>{recipe.instructions}</p>\n                    <h4>Tags:</h4>\n                    <ul>\n                        {tags}\n                    </ul>\n                </div>\n            )\n        }\n        \n        if (this.props.showFollowers) {\n            if (this.props.followers) {\n                output = (\n                    this.props.followers.results.map(follower => (\n                        <li className={classes.FollowerListItem}>\n                            <NavLink \n                                to={\"/user/\" + follower.username}\n                                onClick={this.props.closed}>\n                                <img src={follower.profile_pic} alt=\"profile-pic\" className={classes.FollowerPic} /> &nbsp;{follower.username}<br />\n                            </NavLink>\n                        </li>\n                        ))\n                );\n            }\n        }\n        \n\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.closed} />\n                <div\n                    className={classes.Modal}\n                    //show element or just slide it off the screen\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    \n                    {output}\n\n                </div>\n            </Aux>\n        );\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      followers: state.getFollowers.followers,\n      followersLoading: state.getFollowers.loading,\n    };\n  };\n\nexport default connect(mapStateToProps)(Modal);"]},"metadata":{},"sourceType":"module"}