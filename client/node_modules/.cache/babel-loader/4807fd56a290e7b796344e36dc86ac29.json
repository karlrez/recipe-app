{"ast":null,"code":"var _jsxFileName = \"/home/karl/vscode/recipe-app/client/src/Components/Search/Search.js\";\nimport React, { Component } from \"react\";\nimport Aux from \"../../UI/AuxFolder/Auxiliary\";\nimport Posts from \"../Posts/Posts\";\nimport UserList from \"../UserList/UserList\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport classes from \"./Search.module.css\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      checked: \"tag\",\n      searchInput: null,\n      ingredient1: null,\n      ingredient2: null,\n      ingredient3: null,\n      showPosts: true\n    };\n\n    this.likeHandleClick = () => {};\n\n    this.handleChange = event => {\n      let formValues = this.state;\n      let name = event.target.name;\n      let value = event.target.value;\n      formValues[name] = value;\n      this.setState({\n        formValues\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n\n      if (this.state.checked === \"tag\") {\n        this.props.recipeQuery(\"/recipes/tag/\" + this.state.searchInput);\n        this.setState({\n          showPosts: true\n        });\n      } else if (this.state.checked === \"name\") {\n        this.props.recipeQuery(\"/recipes/name/\" + this.state.searchInput);\n        this.setState({\n          showPosts: true\n        });\n      } else if (this.state.checked === \"ingredients\") {\n        let ingred1 = this.state.ingredient1;\n        let ingred2 = this.state.ingredient2 ? \"/\" + this.state.ingredient2 + \"/\" : \"\";\n        let ingred3 = this.state.ingredient3 ? this.state.ingredient3 : \"\";\n        this.props.recipeQuery(\"recipes/ingredients/\" + ingred1 + ingred2 + ingred3);\n        this.setState({\n          showPosts: true\n        });\n      } else if (this.state.checked === \"user\") {\n        let username = this.state.searchInput;\n        this.props.usersQuery(\"/user/search-users/\" + username);\n        this.setState({\n          showPosts: false\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getSearchRecipes(\"recipes/all-recipes\");\n\n    if (this.props.sp !== 2) {\n      this.props.selectSearchPage();\n    }\n  } // TODO: -Figure out how to increment like counter after liking a recipe\n\n\n  render() {\n    let searchPlaceholder;\n    let searchInput;\n\n    switch (this.state.checked) {\n      case \"tag\":\n        searchPlaceholder = \"Search by #tag...\";\n        searchInput = /*#__PURE__*/React.createElement(\"input\", {\n          name: \"searchInput\",\n          placeholder: searchPlaceholder,\n          onChange: this.handleChange,\n          className: classes.InputText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }\n        });\n        break;\n\n      case \"name\":\n        searchPlaceholder = \"Search by recipe name...\";\n        searchInput = /*#__PURE__*/React.createElement(\"input\", {\n          name: \"searchInput\",\n          placeholder: searchPlaceholder,\n          onChange: this.handleChange,\n          className: classes.InputText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }\n        });\n        break;\n\n      case \"ingredients\":\n        searchPlaceholder = \"Search by up to 3 ingredients...\";\n        searchInput = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          name: \"ingredient1\",\n          placeholder: \"ingredient1\",\n          onChange: this.handleChange,\n          className: classes.InputText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"input\", {\n          name: \"ingredient2\",\n          placeholder: \"ingredient2\",\n          onChange: this.handleChange,\n          className: classes.InputText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"input\", {\n          name: \"ingredient3\",\n          placeholder: \"ingredient3\",\n          onChange: this.handleChange,\n          className: classes.InputText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }\n        }));\n        break;\n\n      case \"user\":\n        searchPlaceholder = \"Search for a user...\";\n        searchInput = /*#__PURE__*/React.createElement(\"input\", {\n          name: \"searchInput\",\n          placeholder: searchPlaceholder,\n          onChange: this.handleChange,\n          className: classes.InputText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    let searchMessage = null;\n\n    if (this.props.recipes < 1 && this.state.showPosts) {\n      searchMessage = /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 23\n        }\n      }, \"Search returned no recipes! :(\");\n    } else if (this.props.users.length < 1 && !this.state.showPosts) {\n      searchMessage = /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 23\n        }\n      }, \"Search returned no users! :(\");\n    }\n\n    let showPosts = null;\n\n    if (this.props.recipesLoading) {\n      showPosts = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }\n      });\n    } else if (this.props.usersLoading) {\n      showPosts = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }\n      });\n    } else if (this.props.loaded) {\n      showPosts = /*#__PURE__*/React.createElement(Posts, {\n        postType: \"searchRecipes\",\n        onLikeBtnClick: e => this.likeHandleClick(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (!this.state.showPosts) {\n      showPosts = /*#__PURE__*/React.createElement(UserList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 19\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.FormDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, \"Tag\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"checked\",\n      value: \"tag\",\n      checked: this.state.checked === \"tag\",\n      onChange: this.handleChange,\n      className: classes.RadioInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, \"Name\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"checked\",\n      value: \"name\",\n      checked: this.state.checked === \"name\",\n      onChange: this.handleChange,\n      className: classes.RadioInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, \"Ingredients\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"checked\",\n      value: \"ingredients\",\n      checked: this.state.checked === \"ingredients\",\n      onChange: this.handleChange,\n      className: classes.RadioInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, \"User\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"checked\",\n      value: \"user\",\n      checked: this.state.checked === \"user\",\n      onChange: this.handleChange,\n      className: classes.RadioInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    })), searchInput, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Search!\",\n      className: classes.SubmitBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }))), searchMessage, showPosts);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    sp: state.navbar.selectedPage,\n    loaded: state.searchRecipes.loaded,\n    recipes: state.searchRecipes.recipes,\n    users: state.searchUsers.users,\n    recipesLoading: state.searchRecipes.loading,\n    usersLoading: state.searchRecipes.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectSearchPage: () => dispatch({\n      type: actionTypes.SEARCH_PAGE\n    }),\n    getSearchRecipes: url => dispatch(actions.searchRecipes(url)),\n    recipeQuery: url => dispatch(actions.searchRecipes(url)),\n    usersQuery: url => dispatch(actions.searchUsers(url))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/home/karl/vscode/recipe-app/client/src/Components/Search/Search.js"],"names":["React","Component","Aux","Posts","UserList","connect","actions","actionTypes","classes","Spinner","Search","state","checked","searchInput","ingredient1","ingredient2","ingredient3","showPosts","likeHandleClick","handleChange","event","formValues","name","target","value","setState","submitHandler","preventDefault","props","recipeQuery","ingred1","ingred2","ingred3","username","usersQuery","componentDidMount","getSearchRecipes","sp","selectSearchPage","render","searchPlaceholder","InputText","searchMessage","recipes","users","length","recipesLoading","usersLoading","loaded","e","FormDiv","RadioInput","SubmitBtn","mapStateToProps","navbar","selectedPage","searchRecipes","searchUsers","loading","mapDispatchToProps","dispatch","type","SEARCH_PAGE","url"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Aux from \"../../UI/AuxFolder/Auxiliary\";\nimport Posts from \"../Posts/Posts\";\nimport UserList from \"../UserList/UserList\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport classes from \"./Search.module.css\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\n\nclass Search extends Component {\n  state = {\n    checked: \"tag\",\n    searchInput: null,\n    ingredient1: null,\n    ingredient2: null,\n    ingredient3: null,\n    showPosts: true,\n  };\n\n  componentDidMount() {\n    this.props.getSearchRecipes(\"recipes/all-recipes\");\n\n    if (this.props.sp !== 2) {\n      this.props.selectSearchPage();\n    }\n  }\n\n  // TODO: -Figure out how to increment like counter after liking a recipe\n  likeHandleClick = () => {};\n\n  handleChange = (event) => {\n    let formValues = this.state;\n    let name = event.target.name;\n    let value = event.target.value;\n    formValues[name] = value;\n    this.setState({ formValues });\n  };\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    if (this.state.checked === \"tag\") {\n      this.props.recipeQuery(\"/recipes/tag/\" + this.state.searchInput);\n      this.setState({ showPosts: true });\n    } else if (this.state.checked === \"name\") {\n      this.props.recipeQuery(\"/recipes/name/\" + this.state.searchInput);\n      this.setState({ showPosts: true });\n    } else if (this.state.checked === \"ingredients\") {\n      let ingred1 = this.state.ingredient1;\n      let ingred2 = this.state.ingredient2\n        ? \"/\" + this.state.ingredient2 + \"/\"\n        : \"\";\n      let ingred3 = this.state.ingredient3 ? this.state.ingredient3 : \"\";\n      this.props.recipeQuery(\n        \"recipes/ingredients/\" + ingred1 + ingred2 + ingred3\n      );\n      this.setState({ showPosts: true });\n    } else if (this.state.checked === \"user\") {\n      let username = this.state.searchInput;\n      this.props.usersQuery(\"/user/search-users/\" + username);\n      this.setState({ showPosts: false });\n    }\n  };\n\n  render() {\n    let searchPlaceholder;\n    let searchInput;\n    switch (this.state.checked) {\n      case \"tag\":\n        searchPlaceholder = \"Search by #tag...\";\n        searchInput = (\n          <input\n            name=\"searchInput\"\n            placeholder={searchPlaceholder}\n            onChange={this.handleChange}\n            className={classes.InputText}\n          />\n        );\n        break;\n      case \"name\":\n        searchPlaceholder = \"Search by recipe name...\";\n        searchInput = (\n          <input\n            name=\"searchInput\"\n            placeholder={searchPlaceholder}\n            onChange={this.handleChange}\n            className={classes.InputText}\n          />\n        );\n        break;\n      case \"ingredients\":\n        searchPlaceholder = \"Search by up to 3 ingredients...\";\n        searchInput = (\n          <div>\n            <input\n              name=\"ingredient1\"\n              placeholder=\"ingredient1\"\n              onChange={this.handleChange}\n              className={classes.InputText}\n            />\n            <input\n              name=\"ingredient2\"\n              placeholder=\"ingredient2\"\n              onChange={this.handleChange}\n              className={classes.InputText}\n            />\n            <input\n              name=\"ingredient3\"\n              placeholder=\"ingredient3\"\n              onChange={this.handleChange}\n              className={classes.InputText}\n            />\n          </div>\n        );\n        break;\n      case \"user\":\n        searchPlaceholder = \"Search for a user...\";\n        searchInput = (\n          <input\n            name=\"searchInput\"\n            placeholder={searchPlaceholder}\n            onChange={this.handleChange}\n            className={classes.InputText}\n          />\n        );\n        break;\n      default:\n        break;\n    }\n\n    let searchMessage = null;\n    if (this.props.recipes < 1 && this.state.showPosts) {\n      searchMessage = <p>Search returned no recipes! :(</p>;\n    } else if (this.props.users.length < 1 && !this.state.showPosts) {\n      searchMessage = <p>Search returned no users! :(</p>;\n    }\n\n    let showPosts = null;\n    if (this.props.recipesLoading) {\n      showPosts = <Spinner />;\n    } else if (this.props.usersLoading) {\n      showPosts = <Spinner />;\n    } else if (this.props.loaded) {\n      showPosts = (\n        <Posts\n          postType=\"searchRecipes\"\n          onLikeBtnClick={(e) => this.likeHandleClick(e)}\n        />\n      );\n    }\n\n    if (!this.state.showPosts) {\n      showPosts = <UserList />;\n    }\n\n    return (\n      <Aux>\n        <div className={classes.FormDiv}>\n          <form onSubmit={this.submitHandler}>\n            <label>\n              Tag\n              <input\n                type=\"radio\"\n                name=\"checked\"\n                value=\"tag\"\n                checked={this.state.checked === \"tag\"}\n                onChange={this.handleChange}\n                className={classes.RadioInput}\n              />\n            </label>\n            <label>\n              Name\n              <input\n                type=\"radio\"\n                name=\"checked\"\n                value=\"name\"\n                checked={this.state.checked === \"name\"}\n                onChange={this.handleChange}\n                className={classes.RadioInput}\n              />\n            </label>\n            <label>\n              Ingredients\n              <input\n                type=\"radio\"\n                name=\"checked\"\n                value=\"ingredients\"\n                checked={this.state.checked === \"ingredients\"}\n                onChange={this.handleChange}\n                className={classes.RadioInput}\n              />\n            </label>\n            <label>\n              User\n              <input\n                type=\"radio\"\n                name=\"checked\"\n                value=\"user\"\n                checked={this.state.checked === \"user\"}\n                onChange={this.handleChange}\n                className={classes.RadioInput}\n              />\n            </label>\n            {searchInput}\n            <input\n              type=\"submit\"\n              value=\"Search!\"\n              className={classes.SubmitBtn}\n            ></input>\n          </form>\n        </div>\n\n        {searchMessage}\n        {showPosts}\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    sp: state.navbar.selectedPage,\n    loaded: state.searchRecipes.loaded,\n    recipes: state.searchRecipes.recipes,\n    users: state.searchUsers.users,\n    recipesLoading: state.searchRecipes.loading,\n    usersLoading: state.searchRecipes.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    selectSearchPage: () => dispatch({ type: actionTypes.SEARCH_PAGE }),\n    getSearchRecipes: (url) => dispatch(actions.searchRecipes(url)),\n    recipeQuery: (url) => dispatch(actions.searchRecipes(url)),\n    usersQuery: (url) => dispatch(actions.searchUsers(url)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n"]},"metadata":{},"sourceType":"module"}