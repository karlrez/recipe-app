{"ast":null,"code":"var _jsxFileName = \"/home/karl/vscode/recipe-app/src/Components/Posts/PostDetail/PostDetail.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/index\";\nimport classes from \"./PostDetail.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport LikeIcon from \"../../../assets/icons/like.png\";\nimport CommentIcon from \"../../../assets/icons/comment.png\";\nimport LikeBlueIcon from \"../../../assets/icons/likeBlue.png\";\n\nclass PostDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.likeHandleClick = async () => {\n      const likePost = await this.props.likeRecipe(this.props.token, this.props.id);\n      const reloadPost = await this.props.getRecipeDetail(this.props.id);\n    };\n\n    this.checkLikedPost = () => {\n      for (let i = 0; i < this.props.likes.length; i++) {\n        if (this.props.username === this.props.likes[i]) {\n          return true;\n        }\n      }\n    };\n\n    this.createLikeButton = () => {\n      let likeButton;\n\n      if (!this.checkLikedPost()) {\n        likeButton = /*#__PURE__*/React.createElement(\"img\", {\n          src: LikeIcon,\n          alt: \"LikeIcon\",\n          value: this.props.id,\n          onClick: e => this.likeHandleClick(),\n          className: classes.LikeIcon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 9\n          }\n        });\n      } else {\n        likeButton = /*#__PURE__*/React.createElement(\"img\", {\n          src: LikeBlueIcon,\n          alt: \"Blue Like Icon\",\n          value: this.props.id,\n          onClick: e => this.likeHandleClick(),\n          className: classes.LikeIcon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return likeButton;\n    };\n\n    this.commentHandleClick = (event, recipeId) => {\n      event.preventDefault();\n      alert(\"Comment feature coming soon!\");\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n\n    if (this.props.id === id) {\n      return;\n    } else {\n      this.props.getRecipeDetail(id);\n    }\n\n    if (this.props.token && !this.props.username) {\n      this.props.getProfileInfo(this.props.token);\n    }\n  } // Refreshing page (to show like is incremented)\n\n\n  render() {\n    // once the recipe is loaded we get the profile pic\n    if (this.props.user && this.props.id !== this.props.otherProfileId) {\n      this.props.otherProfileInfo(this.props.user);\n    } // generating list items for ingredients and tags\n\n\n    let ingredients;\n    let tags = \"\";\n    let name;\n\n    if (this.props.user) {\n      ingredients = this.props.ingredients.map(ingredient => /*#__PURE__*/React.createElement(\"li\", {\n        key: \"{ingredient.id}\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, ingredient));\n      tags = this.props.tags.map(tag => tags.toString().concat(`#${tag} `)); // Also making recipe name uppercase\n\n      name = this.props.name[0].toUpperCase().concat(this.props.name.substr(1, this.props.name.length));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.recipeWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.profilePicDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: `/user/${this.props.user}`,\n      className: classes.userNameLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.profile_pic,\n      alt: \"profile-pic\",\n      className: classes.profilePic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.usernameDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, this.props.user))), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.image,\n      alt: \"recipe\",\n      className: classes.recipeImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.iconDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      value: this.props.id,\n      className: classes.LikeButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, this.createLikeButton(), \"\\xA0\", this.props.likes.length), /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.LikeButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: CommentIcon,\n      className: classes.LikeIcon,\n      alt: \"comment icon\",\n      value: this.props.id,\n      onClick: e => this.commentHandleClick(e, this.props.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), \"\\xA00\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.recipeNameDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.recipeName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, `${name}\\n`), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.tags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, tags), this.props.date ? /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.dateText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, `Posted ${this.props.date.substr(0, 10)}`) : null), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.textboxes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, ingredients)), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, \"Instructions\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.textboxes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, this.props.instructions));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    id: state.recipeDetail.id,\n    user: state.recipeDetail.user,\n    name: state.recipeDetail.name,\n    ingredients: state.recipeDetail.ingredients,\n    tags: state.recipeDetail.tags,\n    time_hours: state.recipeDetail.time_hours,\n    price: state.recipeDetail.price,\n    instructions: state.recipeDetail.instructions,\n    image: state.recipeDetail.image,\n    date: state.recipeDetail.date,\n    likes: state.recipeDetail.likes,\n    error: state.recipeDetail.error,\n    loading: state.recipeDetail.loading,\n    loaded: state.recipeDetail.loaded,\n    profile_pic: state.otherProfileInfo.profile_pic,\n    otherProfileId: state.otherProfileInfo.id,\n    token: state.auth.token,\n    username: state.profileInfo.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getRecipeDetail: id => dispatch(actions.recipeDetail(id)),\n    otherProfileInfo: user => dispatch(actions.otherProfileInfo(user)),\n    likeRecipe: (token, recipeId) => dispatch(actions.likeRecipe(token, recipeId)),\n    getProfileInfo: token => dispatch(actions.profileInfo(token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetail);","map":{"version":3,"sources":["/home/karl/vscode/recipe-app/src/Components/Posts/PostDetail/PostDetail.js"],"names":["React","Component","connect","actions","classes","NavLink","LikeIcon","CommentIcon","LikeBlueIcon","PostDetail","state","likeHandleClick","likePost","props","likeRecipe","token","id","reloadPost","getRecipeDetail","checkLikedPost","i","likes","length","username","createLikeButton","likeButton","e","commentHandleClick","event","recipeId","preventDefault","alert","componentDidMount","match","params","getProfileInfo","render","user","otherProfileId","otherProfileInfo","ingredients","tags","name","map","ingredient","tag","toString","concat","toUpperCase","substr","wrapper","recipeWrapper","profilePicDiv","userNameLink","profile_pic","profilePic","usernameDiv","image","recipeImage","iconDiv","LikeButton","recipeNameDiv","recipeName","date","dateText","textboxes","instructions","mapStateToProps","recipeDetail","time_hours","price","error","loading","loaded","auth","profileInfo","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/index\";\nimport classes from \"./PostDetail.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport LikeIcon from \"../../../assets/icons/like.png\";\nimport CommentIcon from \"../../../assets/icons/comment.png\";\nimport LikeBlueIcon from \"../../../assets/icons/likeBlue.png\";\n\nclass PostDetail extends Component {\n  state = {};\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n\n    if (this.props.id === id) {\n      return;\n    } else {\n      this.props.getRecipeDetail(id);\n    }\n\n    if (this.props.token && !this.props.username) {\n      this.props.getProfileInfo(this.props.token);\n    }\n  }\n\n  // Refreshing page (to show like is incremented)\n  likeHandleClick = async () => {\n    const likePost = await this.props.likeRecipe(\n      this.props.token,\n      this.props.id\n    );\n    const reloadPost = await this.props.getRecipeDetail(this.props.id);\n  };\n\n  // Iterates thru likes array in recipe to see if post was already liked by user\n  checkLikedPost = () => {\n    for (let i = 0; i < this.props.likes.length; i++) {\n      if (this.props.username === this.props.likes[i]) {\n        return true;\n      }\n    }\n  };\n\n  // Return either blue or black like button based on if post was already liked\n  createLikeButton = () => {\n    let likeButton;\n\n    if (!this.checkLikedPost()) {\n      likeButton = (\n        <img\n          src={LikeIcon}\n          alt=\"LikeIcon\"\n          value={this.props.id}\n          onClick={(e) => this.likeHandleClick()}\n          className={classes.LikeIcon}\n        ></img>\n      );\n    } else {\n      likeButton = (\n        <img\n          src={LikeBlueIcon}\n          alt=\"Blue Like Icon\"\n          value={this.props.id}\n          onClick={(e) => this.likeHandleClick()}\n          className={classes.LikeIcon}\n        ></img>\n      );\n    }\n\n    return likeButton;\n  };\n\n  commentHandleClick = (event, recipeId) => {\n    event.preventDefault();\n    alert(\"Comment feature coming soon!\");\n  };\n\n  render() {\n    // once the recipe is loaded we get the profile pic\n    if (this.props.user && this.props.id !== this.props.otherProfileId) {\n      this.props.otherProfileInfo(this.props.user);\n    }\n\n    // generating list items for ingredients and tags\n    let ingredients;\n    let tags = \"\";\n    let name;\n\n    if (this.props.user) {\n      ingredients = this.props.ingredients.map((ingredient) => (\n        <li key=\"{ingredient.id}\">{ingredient}</li>\n      ));\n\n      tags = this.props.tags.map((tag) => tags.toString().concat(`#${tag} `));\n\n      // Also making recipe name uppercase\n      name = this.props.name[0]\n        .toUpperCase()\n        .concat(this.props.name.substr(1, this.props.name.length));\n    }\n\n    return (\n      <div className={classes.wrapper}>\n        <div className={classes.recipeWrapper}>\n          <div className={classes.profilePicDiv}>\n            <NavLink\n              to={`/user/${this.props.user}`}\n              className={classes.userNameLink}\n            >\n              <img\n                src={this.props.profile_pic}\n                alt=\"profile-pic\"\n                className={classes.profilePic}\n              ></img>\n              <span className={classes.usernameDiv}>{this.props.user}</span>\n            </NavLink>\n          </div>\n\n          <img\n            src={this.props.image}\n            alt=\"recipe\"\n            className={classes.recipeImage}\n          ></img>\n          <div>\n            <div className={classes.iconDiv}>\n              <button value={this.props.id} className={classes.LikeButton}>\n                {this.createLikeButton()}\n                &nbsp;{this.props.likes.length}\n              </button>\n              <button className={classes.LikeButton}>\n                <img\n                  src={CommentIcon}\n                  className={classes.LikeIcon}\n                  alt=\"comment icon\"\n                  value={this.props.id}\n                  onClick={(e) => this.commentHandleClick(e, this.props.id)}\n                />\n                &nbsp;0\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className={classes.recipeNameDiv}>\n          <span className={classes.recipeName}>{`${name}\\n`}</span>\n          <div className={classes.tags}>{tags}</div>\n          {this.props.date ? (\n            <span\n              className={classes.dateText}\n            >{`Posted ${this.props.date.substr(0, 10)}`}</span>\n          ) : null}\n        </div>\n        <h3>Ingredients</h3>\n        <div className={classes.textboxes}>\n          <ul>{ingredients}</ul>\n        </div>\n        <h3>Instructions</h3>\n        <div className={classes.textboxes}>{this.props.instructions}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    id: state.recipeDetail.id,\n    user: state.recipeDetail.user,\n    name: state.recipeDetail.name,\n    ingredients: state.recipeDetail.ingredients,\n    tags: state.recipeDetail.tags,\n    time_hours: state.recipeDetail.time_hours,\n    price: state.recipeDetail.price,\n    instructions: state.recipeDetail.instructions,\n    image: state.recipeDetail.image,\n    date: state.recipeDetail.date,\n    likes: state.recipeDetail.likes,\n    error: state.recipeDetail.error,\n    loading: state.recipeDetail.loading,\n    loaded: state.recipeDetail.loaded,\n    profile_pic: state.otherProfileInfo.profile_pic,\n    otherProfileId: state.otherProfileInfo.id,\n    token: state.auth.token,\n\n    username: state.profileInfo.username,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getRecipeDetail: (id) => dispatch(actions.recipeDetail(id)),\n    otherProfileInfo: (user) => dispatch(actions.otherProfileInfo(user)),\n    likeRecipe: (token, recipeId) =>\n      dispatch(actions.likeRecipe(token, recipeId)),\n    getProfileInfo: (token) => dispatch(actions.profileInfo(token)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetail);\n"]},"metadata":{},"sourceType":"module"}