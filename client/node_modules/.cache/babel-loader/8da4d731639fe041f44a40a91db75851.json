{"ast":null,"code":"var _jsxFileName = \"/home/karl/vscode/recipe-app/src/Components/Add/Add.js\";\nimport React, { Component } from \"react\";\nimport Aux from \"../../UI/AuxFolder/Auxiliary\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport classes from \"./Add.module.css\";\nimport axios from \"../../axios\";\nimport { Redirect } from \"react-router-dom\";\nimport AddIcon from \"../../assets/icons/add.png\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\n\nclass Add extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: null,\n      name: \"\",\n      time_hours: 0,\n      price: 0,\n      link: \"\",\n      // could add this in later\n      instructions: \"\",\n      ingredient: \"\",\n      ingredientsList: [],\n      // ingredients as Strings\n      ingredients: [],\n      // ingredients as id's (used for api)\n      tag: \"\",\n      tagsList: [],\n      tags: [],\n      image: null\n    };\n\n    this.handleImageChange = e => {\n      console.log(JSON.stringify(this.state));\n      this.setState({\n        image: e.target.files[0],\n        imagePreview: URL.createObjectURL(e.target.files[0])\n      });\n    };\n\n    this.ingredientChange = event => {\n      this.setState({\n        ingredient: event.target.value\n      });\n    };\n\n    this.tagChange = event => {\n      this.setState({\n        tag: event.target.value\n      });\n    };\n\n    this.handleChange = event => {\n      let formValues = this.state;\n      let name = event.target.name;\n      let value = event.target.value;\n      formValues[name] = value;\n      this.setState({\n        formValues\n      });\n    };\n\n    this.getIngredientID = ingredient => {\n      axios.get(\"recipes/ingredient-detail/\" + ingredient).then(response => {\n        console.log(response.data.id);\n        this.setState({\n          ingredients: [...this.state.ingredients, response.data.id]\n        });\n      }).catch(err => {\n        console.log(err.response);\n        let data = {\n          name: ingredient\n        };\n        axios.post(\"recipes/view-create-ingredients/\", data).then(response => {\n          console.log(response.data.id);\n          this.setState({\n            ingredients: [...this.state.ingredients, response.data.id]\n          });\n        }).catch(err => {\n          console.log(err.response);\n          return null;\n        });\n      });\n    };\n\n    this.getTagID = tag => {\n      axios.get(\"recipes/tag-detail/\" + tag).then(response => {\n        console.log(response.data.id);\n        this.setState({\n          tags: [...this.state.tags, response.data.id]\n        });\n      }).catch(err => {\n        console.log(err.response);\n        let data = {\n          name: tag\n        };\n        axios.post(\"recipes/view-create-tags/\", data).then(response => {\n          console.log(response.data.id);\n          this.setState({\n            tags: [...this.state.tags, response.data.id]\n          });\n        }).catch(err => {\n          console.log(err.response);\n          return null;\n        });\n      });\n    };\n\n    this.ingredientAddBtnHandler = event => {\n      event.preventDefault();\n      this.refs.ingred.value = \"\"; // Dont want empty inputs\n\n      if (this.state.ingredient.trim() === \"\") {\n        return;\n      } // No duplicate inputs\n\n\n      for (let i = 0; i < this.state.ingredientsList.length; i++) {\n        if (this.state.ingredientsList[i] === this.state.ingredient) {\n          alert(\"You already added that ingredient!\");\n          return;\n        }\n      }\n\n      this.setState({\n        ingredientsList: [...this.state.ingredientsList, this.state.ingredient]\n      });\n      this.getIngredientID(this.state.ingredient);\n    };\n\n    this.tagAddBtnHandler = event => {\n      event.preventDefault();\n      this.refs.tag.value = \"\";\n      let tag = this.state.tag; // No empty inputs\n\n      if (this.state.tag.trim() === \"\") {\n        return;\n      } // No duplicate inputs\n\n\n      for (let i = 0; i < this.state.tagsList.length; i++) {\n        if (this.state.tagsList[i] === tag) {\n          alert(\"You already added that tag!\");\n          return;\n        }\n      } // Adding a '#' if its not there\n\n\n      if (tag[0] !== \"#\") {\n        tag = \"#\" + tag;\n      }\n\n      this.setState({\n        tagsList: [...this.state.tagsList, tag]\n      });\n      this.getTagID(this.state.tag);\n    };\n\n    this.ingredientRemoveBtnHandler = event => {\n      event.preventDefault(); // Also Removing element from ingredients[]\n\n      let newIngredients = this.state.ingredients;\n\n      for (let i = 0; i <= this.state.ingredientsList.length; i++) {\n        if (this.state.ingredientsList[i] === event.target.value) {\n          newIngredients.splice(i, 1);\n        }\n      }\n\n      this.setState({\n        ingredients: newIngredients\n      }); // Removing from ingredientsList[]\n\n      const newList = this.state.ingredientsList.filter(ingredient => ingredient !== event.target.value);\n      this.setState({\n        ingredientsList: newList\n      });\n    };\n\n    this.tagRemoveBtnHandler = event => {\n      event.preventDefault(); // Also Removing element from tags[]\n\n      let newTags = this.state.tags;\n\n      for (let i = 0; i <= this.state.tagsList.length; i++) {\n        if (this.state.tagsList[i] === event.target.value) {\n          newTags.splice(i, 1);\n        }\n      }\n\n      this.setState({\n        tags: newTags\n      }); // Removing from tagsList[]\n\n      const newList = this.state.tagsList.filter(tag => tag !== event.target.value);\n      this.setState({\n        tagsList: newList\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      let form_data = new FormData();\n      form_data.append(\"id\", this.props.userId);\n      form_data.append(\"name\", this.state.name);\n      form_data.append(\"time_hours\", this.state.time_hours);\n      form_data.append(\"price\", this.state.price);\n      form_data.append(\"link\", this.state.link);\n      this.state.ingredients.forEach(item => {\n        form_data.append(\"ingredients\", item);\n      });\n      this.state.tags.forEach(item => {\n        form_data.append(\"tags\", item);\n      });\n      form_data.append(\"instructions\", this.state.instructions);\n      form_data.append(\"image\", this.state.image);\n      this.props.createRecipe(form_data, this.props.token);\n      this.resetState();\n    };\n\n    this.resetState = () => {\n      this.setState({\n        id: null,\n        name: \"\",\n        time_minutes: 0,\n        time_hours: 0,\n        price: 0,\n        link: \"\",\n        instructions: \"\",\n        ingredient: \"\",\n        ingredientsList: [],\n        ingredients: [],\n        tag: \"\",\n        tagsList: [],\n        tags: [],\n        image: null\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.sp !== 3) {\n      this.props.selectAddPage();\n    }\n\n    if (this.props.token !== null && this.props.userInfoLoaded === false) {\n      this.props.getProfileInfo(this.props.token);\n    }\n  }\n\n  render() {\n    let addedIngreds = null;\n\n    if (this.state.ingredientsList) {\n      addedIngreds = this.state.ingredientsList.map(ingred => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 9\n        }\n      }, ingred, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.ingredientRemoveBtnHandler,\n        value: ingred,\n        className: classes.RemoveBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }\n      }, \"x\")));\n    }\n\n    let addedTags = null;\n\n    if (this.state.tagsList) {\n      addedTags = this.state.tagsList.map(tag => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 9\n        }\n      }, tag, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.tagRemoveBtnHandler,\n        value: tag,\n        className: classes.RemoveBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }\n      }, \"x\")));\n    }\n\n    let imagePreview = null;\n\n    if (this.state.imagePreview) {\n      imagePreview = /*#__PURE__*/React.createElement(\"img\", {\n        src: this.state.imagePreview,\n        alt: \"preview\",\n        className: classes.ImgPreview,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 9\n        }\n      });\n    }\n\n    let form = /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 7\n      }\n    }, imagePreview, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }\n    }, \"Recipe Pic\\xA0\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"recipePic\",\n      type: \"file\",\n      accept: \"image/png, image/jpeg\",\n      required: true,\n      onChange: this.handleImageChange,\n      className: classes.FormInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      //className={classes.formInput}\n      name: \"name\",\n      required: true,\n      placeholder: \"Recipe Name\",\n      onChange: this.handleChange,\n      className: classes.FormInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      //className={classes.formInput}\n      name: \"time_hours\",\n      type: \"number\",\n      min: \"0\",\n      step: \"any\",\n      placeholder: \"Time (Hours)\",\n      onChange: this.handleChange,\n      className: classes.FormInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      //className={classes.formInput}\n      name: \"price\",\n      type: \"number\",\n      min: \"0\",\n      step: \"any\",\n      placeholder: \"Price $\",\n      onChange: this.handleChange,\n      className: classes.FormInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      //className={classes.formInput}\n      name: \"ingredient\",\n      ref: \"ingred\",\n      placeholder: \"Ingredients\",\n      onChange: this.ingredientChange,\n      className: classes.FormInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.ingredientAddBtnHandler,\n      className: classes.FormBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: AddIcon,\n      alt: \"add\",\n      className: classes.ImgBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }\n    }, addedIngreds), /*#__PURE__*/React.createElement(\"input\", {\n      //className={classes.formInput}\n      name: \"tag\",\n      ref: \"tag\",\n      placeholder: \"Tags\",\n      onChange: this.tagChange,\n      className: classes.FormInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.tagAddBtnHandler,\n      className: classes.FormBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: AddIcon,\n      alt: \"add\",\n      className: classes.ImgBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }\n    }, addedTags), /*#__PURE__*/React.createElement(\"textarea\", {\n      //className={classes.formInput}\n      name: \"instructions\",\n      rows: \"5\",\n      cols: \"40\",\n      placeholder: \"Instructions\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }\n    }, this.props.loading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 33\n      }\n    }) : null, this.props.showSuccess ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 37\n      }\n    }, \"Recipe Added!\") : null, !this.props.showSuccess ? /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: classes.SubmitBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 13\n      }\n    }) : null));\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }\n    }, form), this.props.error ? null : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 36\n      }\n    }, this.props.error));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    userInfoLoaded: state.profileInfo.loaded,\n    userId: state.profileInfo.id,\n    error: state.createRecipe.error,\n    showSuccess: state.createRecipe.showSuccess,\n    loading: state.createRecipe.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectAddPage: () => dispatch({\n      type: actionTypes.ADD_PAGE\n    }),\n    getProfileInfo: token => dispatch(actions.profileInfo(token)),\n    createRecipe: (data, token) => dispatch(actions.createRecipe(data, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Add);","map":{"version":3,"sources":["/home/karl/vscode/recipe-app/src/Components/Add/Add.js"],"names":["React","Component","Aux","connect","actions","actionTypes","classes","axios","Redirect","AddIcon","Spinner","Add","state","id","name","time_hours","price","link","instructions","ingredient","ingredientsList","ingredients","tag","tagsList","tags","image","handleImageChange","e","console","log","JSON","stringify","setState","target","files","imagePreview","URL","createObjectURL","ingredientChange","event","value","tagChange","handleChange","formValues","getIngredientID","get","then","response","data","catch","err","post","getTagID","ingredientAddBtnHandler","preventDefault","refs","ingred","trim","i","length","alert","tagAddBtnHandler","ingredientRemoveBtnHandler","newIngredients","splice","newList","filter","tagRemoveBtnHandler","newTags","submitHandler","form_data","FormData","append","props","userId","forEach","item","createRecipe","token","resetState","time_minutes","componentDidMount","sp","selectAddPage","userInfoLoaded","getProfileInfo","render","addedIngreds","map","RemoveBtn","addedTags","ImgPreview","form","FormInput","FormBtn","ImgBtn","loading","showSuccess","SubmitBtn","formDiv","error","mapStateToProps","auth","profileInfo","loaded","mapDispatchToProps","dispatch","type","ADD_PAGE"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Aux from \"../../UI/AuxFolder/Auxiliary\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport classes from \"./Add.module.css\";\nimport axios from \"../../axios\";\nimport { Redirect } from \"react-router-dom\";\nimport AddIcon from \"../../assets/icons/add.png\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\n\nclass Add extends Component {\n  state = {\n    id: null,\n    name: \"\",\n    time_hours: 0,\n    price: 0,\n    link: \"\", // could add this in later\n    instructions: \"\",\n    ingredient: \"\",\n    ingredientsList: [], // ingredients as Strings\n    ingredients: [], // ingredients as id's (used for api)\n    tag: \"\",\n    tagsList: [],\n    tags: [],\n    image: null,\n  };\n\n  componentDidMount() {\n    if (this.props.sp !== 3) {\n      this.props.selectAddPage();\n    }\n    if (this.props.token !== null && this.props.userInfoLoaded === false) {\n      this.props.getProfileInfo(this.props.token);\n    }\n  }\n\n  handleImageChange = (e) => {\n    console.log(JSON.stringify(this.state));\n    this.setState({\n      image: e.target.files[0],\n      imagePreview: URL.createObjectURL(e.target.files[0]),\n    });\n  };\n\n  ingredientChange = (event) => {\n    this.setState({\n      ingredient: event.target.value,\n    });\n  };\n\n  tagChange = (event) => {\n    this.setState({\n      tag: event.target.value,\n    });\n  };\n\n  handleChange = (event) => {\n    let formValues = this.state;\n    let name = event.target.name;\n    let value = event.target.value;\n    formValues[name] = value;\n    this.setState({ formValues });\n  };\n\n  getIngredientID = (ingredient) => {\n    axios\n      .get(\"recipes/ingredient-detail/\" + ingredient)\n      .then((response) => {\n        console.log(response.data.id);\n        this.setState({\n          ingredients: [...this.state.ingredients, response.data.id],\n        });\n      })\n      .catch((err) => {\n        console.log(err.response);\n        let data = { name: ingredient };\n        axios\n          .post(\"recipes/view-create-ingredients/\", data)\n          .then((response) => {\n            console.log(response.data.id);\n            this.setState({\n              ingredients: [...this.state.ingredients, response.data.id],\n            });\n          })\n          .catch((err) => {\n            console.log(err.response);\n            return null;\n          });\n      });\n  };\n\n  getTagID = (tag) => {\n    axios\n      .get(\"recipes/tag-detail/\" + tag)\n      .then((response) => {\n        console.log(response.data.id);\n        this.setState({\n          tags: [...this.state.tags, response.data.id],\n        });\n      })\n      .catch((err) => {\n        console.log(err.response);\n        let data = { name: tag };\n        axios\n          .post(\"recipes/view-create-tags/\", data)\n          .then((response) => {\n            console.log(response.data.id);\n            this.setState({\n              tags: [...this.state.tags, response.data.id],\n            });\n          })\n          .catch((err) => {\n            console.log(err.response);\n            return null;\n          });\n      });\n  };\n\n  ingredientAddBtnHandler = (event) => {\n    event.preventDefault();\n    this.refs.ingred.value = \"\";\n\n    // Dont want empty inputs\n    if (this.state.ingredient.trim() === \"\") {\n      return;\n    }\n\n    // No duplicate inputs\n    for (let i = 0; i < this.state.ingredientsList.length; i++) {\n      if (this.state.ingredientsList[i] === this.state.ingredient) {\n        alert(\"You already added that ingredient!\");\n        return;\n      }\n    }\n\n    this.setState({\n      ingredientsList: [...this.state.ingredientsList, this.state.ingredient],\n    });\n\n    this.getIngredientID(this.state.ingredient);\n  };\n\n  tagAddBtnHandler = (event) => {\n    event.preventDefault();\n    this.refs.tag.value = \"\";\n\n    let tag = this.state.tag;\n\n    // No empty inputs\n    if (this.state.tag.trim() === \"\") {\n      return;\n    }\n\n    // No duplicate inputs\n    for (let i = 0; i < this.state.tagsList.length; i++) {\n      if (this.state.tagsList[i] === tag) {\n        alert(\"You already added that tag!\");\n        return;\n      }\n    }\n\n    // Adding a '#' if its not there\n    if (tag[0] !== \"#\") {\n      tag = \"#\" + tag;\n    }\n    \n    this.setState({\n      tagsList: [...this.state.tagsList, tag],\n    });\n\n    this.getTagID(this.state.tag);\n  };\n\n  ingredientRemoveBtnHandler = (event) => {\n    event.preventDefault();\n    // Also Removing element from ingredients[]\n    let newIngredients = this.state.ingredients;\n    for (let i = 0; i <= this.state.ingredientsList.length; i++) {\n      if (this.state.ingredientsList[i] === event.target.value) {\n        newIngredients.splice(i, 1);\n      }\n    }\n    this.setState({ ingredients: newIngredients });\n\n    // Removing from ingredientsList[]\n    const newList = this.state.ingredientsList.filter(\n      (ingredient) => ingredient !== event.target.value\n    );\n    this.setState({ ingredientsList: newList });\n  };\n\n  tagRemoveBtnHandler = (event) => {\n    event.preventDefault();\n    // Also Removing element from tags[]\n    let newTags = this.state.tags;\n    for (let i = 0; i <= this.state.tagsList.length; i++) {\n      if (this.state.tagsList[i] === event.target.value) {\n        newTags.splice(i, 1);\n      }\n    }\n    this.setState({ tags: newTags });\n\n    // Removing from tagsList[]\n    const newList = this.state.tagsList.filter(\n      (tag) => tag !== event.target.value\n    );\n    this.setState({ tagsList: newList });\n  };\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    let form_data = new FormData();\n    form_data.append(\"id\", this.props.userId);\n    form_data.append(\"name\", this.state.name);\n    form_data.append(\"time_hours\", this.state.time_hours);\n    form_data.append(\"price\", this.state.price);\n    form_data.append(\"link\", this.state.link);\n    this.state.ingredients.forEach((item) => {\n      form_data.append(\"ingredients\", item);\n    });\n    this.state.tags.forEach((item) => {\n      form_data.append(\"tags\", item);\n    });\n    form_data.append(\"instructions\", this.state.instructions);\n    form_data.append(\"image\", this.state.image);\n    this.props.createRecipe(form_data, this.props.token);\n\n    this.resetState();\n  };\n\n  resetState = () => {\n    this.setState({\n      id: null,\n      name: \"\",\n      time_minutes: 0,\n      time_hours: 0,\n      price: 0,\n      link: \"\",\n      instructions: \"\",\n      ingredient: \"\",\n      ingredientsList: [],\n      ingredients: [],\n      tag: \"\",\n      tagsList: [],\n      tags: [],\n      image: null,\n    });\n  };\n\n  render() {\n    let addedIngreds = null;\n    if (this.state.ingredientsList) {\n      addedIngreds = this.state.ingredientsList.map((ingred) => (\n        <li>\n          {ingred}\n          <button\n            onClick={this.ingredientRemoveBtnHandler}\n            value={ingred}\n            className={classes.RemoveBtn}\n          >\n            x\n          </button>\n        </li>\n      ));\n    }\n\n    let addedTags = null;\n    if (this.state.tagsList) {\n      addedTags = this.state.tagsList.map((tag) => (\n        <li>\n          {tag}\n          <button\n            onClick={this.tagRemoveBtnHandler}\n            value={tag}\n            className={classes.RemoveBtn}\n          >\n            x\n          </button>\n        </li>\n      ));\n    }\n\n    let imagePreview = null;\n    if (this.state.imagePreview) {\n      imagePreview = (\n        <img\n          src={this.state.imagePreview}\n          alt=\"preview\"\n          className={classes.ImgPreview}\n        />\n      );\n    }\n\n    let form = (\n      <form onSubmit={this.submitHandler}>\n        {imagePreview}\n        <p></p>\n        <label>\n          Recipe Pic&nbsp;\n          <input\n            name=\"recipePic\"\n            type=\"file\"\n            accept=\"image/png, image/jpeg\"\n            required\n            onChange={this.handleImageChange}\n            className={classes.FormInput}\n          />\n        </label>\n        <p></p>\n        <input\n          //className={classes.formInput}\n          name=\"name\"\n          required\n          placeholder=\"Recipe Name\"\n          onChange={this.handleChange}\n          className={classes.FormInput}\n        />\n        <p></p>\n        <input\n          //className={classes.formInput}\n          name=\"time_hours\"\n          type=\"number\"\n          min=\"0\"\n          step=\"any\"\n          placeholder=\"Time (Hours)\"\n          onChange={this.handleChange}\n          className={classes.FormInput}\n        />\n        <p></p>\n        <input\n          //className={classes.formInput}\n          name=\"price\"\n          type=\"number\"\n          min=\"0\"\n          step=\"any\"\n          placeholder=\"Price $\"\n          onChange={this.handleChange}\n          className={classes.FormInput}\n        />\n        <p></p>\n        <input\n          //className={classes.formInput}\n          name=\"ingredient\"\n          ref=\"ingred\"\n          placeholder=\"Ingredients\"\n          onChange={this.ingredientChange}\n          className={classes.FormInput}\n        />\n        <button\n          onClick={this.ingredientAddBtnHandler}\n          className={classes.FormBtn}\n        >\n          <img src={AddIcon} alt=\"add\" className={classes.ImgBtn} />\n        </button>\n        <p></p>\n        <ul>{addedIngreds}</ul>\n        <input\n          //className={classes.formInput}\n          name=\"tag\"\n          ref=\"tag\"\n          placeholder=\"Tags\"\n          onChange={this.tagChange}\n          className={classes.FormInput}\n        />\n        <button onClick={this.tagAddBtnHandler} className={classes.FormBtn}>\n          <img src={AddIcon} alt=\"add\" className={classes.ImgBtn} />\n        </button>\n        <p></p>\n        <ul>{addedTags}</ul>\n        <textarea\n          //className={classes.formInput}\n          name=\"instructions\"\n          rows=\"5\"\n          cols=\"40\"\n          placeholder=\"Instructions\"\n          onChange={this.handleChange}\n        />\n        <p></p>\n        <div>\n          {this.props.loading ? <Spinner /> : null}\n          {this.props.showSuccess ? <p>Recipe Added!</p> : null}\n          {!this.props.showSuccess ? (\n            <input type=\"submit\" value=\"Submit\" className={classes.SubmitBtn}></input>\n          ) : null}\n        </div>\n      </form>\n    );\n\n    return (\n      <Aux>\n        <div className={classes.formDiv}>{form}</div>\n        {this.props.error ? null : <p>{this.props.error}</p>}\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userInfoLoaded: state.profileInfo.loaded,\n    userId: state.profileInfo.id,\n    error: state.createRecipe.error,\n    showSuccess: state.createRecipe.showSuccess,\n    loading: state.createRecipe.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    selectAddPage: () => dispatch({ type: actionTypes.ADD_PAGE }),\n    getProfileInfo: (token) => dispatch(actions.profileInfo(token)),\n    createRecipe: (data, token) => dispatch(actions.createRecipe(data, token)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Add);\n"]},"metadata":{},"sourceType":"module"}