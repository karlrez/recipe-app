{"ast":null,"code":"var _jsxFileName = \"/home/karl/vscode/recipe-app/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport Layout from \"./UI/Layout/Layout\";\nimport Login from \"./Components/Login/Login\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/index\";\nimport classes from \"./App.module.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    // Collecting login info if available from local storage\n    this.props.tryAutoSignIn();\n  }\n\n  render() {\n    // Show home screen or prompt for login\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.isAuthenticated ? classes.mainLayout : classes.mainLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, this.props.isAuthenticated ? /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 44\n      }\n    }) : /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 57\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    tryAutoSignIn: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/karl/vscode/recipe-app/client/src/App.js"],"names":["React","Component","Layout","Login","connect","actions","classes","App","componentDidMount","props","tryAutoSignIn","render","isAuthenticated","mainLayout","mainLogin","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch","authCheckState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,KAAL,CAAWC,aAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACA,wBACE;AACE,MAAA,SAAS,EACP,KAAKF,KAAL,CAAWG,eAAX,GAA6BN,OAAO,CAACO,UAArC,GAAkDP,OAAO,CAACQ,SAF9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKL,KAAL,CAAWG,eAAX,gBAA6B,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,gBAA0C,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhD,CALF,CADF;AASD;;AAjByB;;AAoB5B,MAAMG,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLJ,IAAAA,eAAe,EAAEI,KAAK,CAACC,IAAN,CAAWC,KAAX,KAAqB;AADjC,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLV,IAAAA,aAAa,EAAE,MAAMU,QAAQ,CAACf,OAAO,CAACgB,cAAR,EAAD;AADxB,GAAP;AAGD,CAJD;;AAMA,eAAejB,OAAO,CAACW,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CZ,GAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"./UI/Layout/Layout\";\nimport Login from \"./Components/Login/Login\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/index\";\nimport classes from \"./App.module.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    // Collecting login info if available from local storage\n    this.props.tryAutoSignIn();\n  }\n\n  render() {\n    // Show home screen or prompt for login\n    return (\n      <div\n        className={\n          this.props.isAuthenticated ? classes.mainLayout : classes.mainLogin\n        }\n      >\n        <div>{this.props.isAuthenticated ? <Layout /> : <Login />}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    tryAutoSignIn: () => dispatch(actions.authCheckState()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}