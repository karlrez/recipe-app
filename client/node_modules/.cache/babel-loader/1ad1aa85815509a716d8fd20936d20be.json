{"ast":null,"code":"var _jsxFileName = \"/home/karl/vscode/recipe-app/client/src/Components/Login/Login.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Aux from \"../../UI/AuxFolder/Auxiliary\";\nimport * as actions from \"../../store/actions/index\";\nimport classes from \"./Login.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport CreateUser from \"../CreateUser/CreateUser\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      back: false,\n      showSignUp: false\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      let formValues = this.state;\n      let name = event.target.name;\n      let value = event.target.value;\n      formValues[name] = value;\n      this.setState({\n        formValues\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      this.props.onAuth(this.state.email, this.state.password);\n    };\n\n    this.backButtonHandler = event => {\n      this.setState({\n        back: true\n      });\n    };\n\n    this.withoutAccountHandler = () => {\n      alert(\"email: test@gmail.com\\npassword: test123\");\n    };\n\n    this.showSignUp = () => {\n      this.setState({\n        showSignUp: true\n      });\n    };\n\n    this.hideSignUp = () => {\n      this.setState({\n        showSignUp: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.onSetAuthRedirectPath();\n  }\n\n  render() {\n    let authRedirect = null;\n\n    if (this.props.isAuthenticated || this.state.back === true) {\n      authRedirect = /*#__PURE__*/React.createElement(Redirect, {\n        to: this.props.authRedirectPath,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 22\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      className: classes.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, authRedirect, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"RecipeGram\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      required: true,\n      onChange: this.handleChange,\n      className: classes.inputText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"password\",\n      required: true,\n      onChange: this.handleChange,\n      className: classes.inputText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      className: classes.inputBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.showSignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }), \"Dont have an account? \", /*#__PURE__*/React.createElement(NavLink, {\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 35\n      }\n    }, \"Create an account.\")), /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.withoutAccountHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"Continue without an account\"))), this.props.error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, this.props.error) : null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \" \", this.state.showSignUp ? /*#__PURE__*/React.createElement(CreateUser, {\n      hideSignUp: this.hideSignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 40\n      }\n    }) : null));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null,\n    authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password) => dispatch(actions.auth(email, password)),\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\"))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/karl/vscode/recipe-app/client/src/Components/Login/Login.js"],"names":["React","Component","connect","Redirect","Aux","actions","classes","NavLink","CreateUser","Login","state","email","password","back","showSignUp","handleChange","event","preventDefault","formValues","name","target","value","setState","submitHandler","props","onAuth","backButtonHandler","withoutAccountHandler","alert","hideSignUp","componentDidMount","onSetAuthRedirectPath","render","authRedirect","isAuthenticated","authRedirectPath","main","wrapper","title","inputText","inputBtn","error","mapStateToProps","loading","auth","token","mapDispatchToProps","dispatch","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Aux from \"../../UI/AuxFolder/Auxiliary\";\nimport * as actions from \"../../store/actions/index\";\nimport classes from \"./Login.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport CreateUser from \"../CreateUser/CreateUser\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    back: false,\n    showSignUp: false,\n  };\n\n  componentDidMount() {\n    this.props.onSetAuthRedirectPath();\n  }\n\n  handleChange = (event) => {\n    event.preventDefault();\n    let formValues = this.state;\n    let name = event.target.name;\n    let value = event.target.value;\n    formValues[name] = value;\n    this.setState({ formValues });\n  };\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onAuth(this.state.email, this.state.password);\n  };\n\n  backButtonHandler = (event) => {\n    this.setState({\n      back: true,\n    });\n  };\n\n  withoutAccountHandler = () => {\n    alert(\"email: test@gmail.com\\npassword: test123\");\n  };\n\n  showSignUp = () => {\n    this.setState({showSignUp: true});\n  };\n\n  hideSignUp =() => {\n    this.setState({showSignUp: false});\n  }\n\n  render() {\n    let authRedirect = null;\n    if (this.props.isAuthenticated || this.state.back === true) {\n      authRedirect = <Redirect to={this.props.authRedirectPath} />;\n    }\n\n    return (\n      <Aux className={classes.main}>\n        {authRedirect}\n        <div className={classes.wrapper}>\n          <h1 className={classes.title}>RecipeGram</h1>\n          <form onSubmit={this.submitHandler}>\n            <input\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Email\"\n              required\n              onChange={this.handleChange}\n              className={classes.inputText}\n            />\n            <br />\n            <input\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"password\"\n              required\n              onChange={this.handleChange}\n              className={classes.inputText}\n            />\n            <p></p>\n            <input\n              type=\"submit\"\n              value=\"Login\"\n              className={classes.inputBtn}\n            ></input>\n          </form>\n          <p onClick={this.showSignUp}>\n            <br />\n            Dont have an account? <NavLink to=\"#\">Create an account.</NavLink>\n          </p>\n          <p onClick={this.withoutAccountHandler}>\n            <NavLink to=\"#\">Continue without an account</NavLink>\n          </p>\n        </div>\n\n        {this.props.error ? <p>{this.props.error}</p> : null}\n\n        <div> {this.state.showSignUp ? <CreateUser hideSignUp={this.hideSignUp}/> : null}</div>\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null,\n    authRedirectPath: state.auth.authRedirectPath,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (email, password) => dispatch(actions.auth(email, password)),\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\")),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}