{"ast":null,"code":"var _jsxFileName = \"/home/karl/vscode/recipe-app/src/Components/Profile/Header/Header.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classes from \"./Header.module.css\";\nimport axios from \"../../../axios\";\nimport Modal from \"../../../UI/Modal/Modal\";\nimport * as actions from \"../../../store/actions/index\";\n\nclass Header extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showModal: false,\n      user: null,\n      // user for who we want to get followers for\n      modalFollowers: null // true if modal displays followers, false for following list\n\n    };\n\n    this.followHandleClick = event => {\n      const header = {\n        headers: {\n          Authorization: \"Token \" + this.props.token\n        }\n      };\n      console.log(this.props.token);\n      const url = \"user/\" + event.target.value + \"/follow\";\n      axios.get(url, header).then(response => {\n        console.log(response.data.follow);\n        alert(response.data.follow);\n      }).catch(err => {\n        console.log(err.response);\n      });\n    };\n\n    this.showModalHandler = (user, getFollowers) => {\n      let currentState = this.state.showModal;\n      this.setState({\n        showModal: !currentState,\n        user: user,\n        modalFollowers: getFollowers\n      });\n      this.props.getFollowers(user, getFollowers);\n    };\n\n    this.hideModalHandler = () => {\n      this.setState({\n        showModal: false,\n        user: null,\n        modalFollowers: null\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.token) {\n      this.props.getProfileInfo(this.props.token);\n    }\n  }\n\n  render() {\n    let modal;\n\n    if (this.state.showModal && !this.props.followersLoading) {\n      modal = /*#__PURE__*/React.createElement(Modal, {\n        show: \"true\",\n        closed: this.hideModalHandler,\n        showFollowers: \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Wrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.profileInfo.profile_pic,\n      className: classes.ProfilePic,\n      alt: \"profile-pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.FullName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, this.props.profileInfo.full_name), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.Username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"@\", this.props.profileInfo.username), /*#__PURE__*/React.createElement(\"table\", {\n      className: classes.Table,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      onClick: () => this.showModalHandler(this.props.profileInfo.username, true),\n      className: classes.TableTop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, this.props.profileInfo.followers), /*#__PURE__*/React.createElement(\"td\", {\n      onClick: () => this.showModalHandler(this.props.profileInfo.username, false),\n      className: classes.TableTop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, this.props.profileInfo.following)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Followers\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"Following\")))), /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.FollowButton,\n      onClick: this.followHandleClick,\n      value: this.props.profileInfo.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \" \", \"Follow\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.BioDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, this.props.profileInfo.bio)), modal);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    followersLoading: state.getFollowers.loading,\n    myProfileInfo: state.profileInfo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getFollowers: (user, getFollowers) => dispatch(actions.getFollowers(user, getFollowers)),\n    getProfileInfo: token => dispatch(actions.profileInfo(token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/home/karl/vscode/recipe-app/src/Components/Profile/Header/Header.js"],"names":["React","Component","connect","classes","axios","Modal","actions","Header","state","showModal","user","modalFollowers","followHandleClick","event","header","headers","Authorization","props","token","console","log","url","target","value","get","then","response","data","follow","alert","catch","err","showModalHandler","getFollowers","currentState","setState","hideModalHandler","componentDidMount","getProfileInfo","render","modal","followersLoading","Wrapper","profileInfo","profile_pic","ProfilePic","FullName","full_name","Username","username","Table","TableTop","followers","following","FollowButton","BioDiv","bio","mapStateToProps","auth","loading","myProfileInfo","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classes from \"./Header.module.css\";\nimport axios from \"../../../axios\";\nimport Modal from \"../../../UI/Modal/Modal\";\nimport * as actions from \"../../../store/actions/index\";\n\nclass Header extends Component {\n  state = {\n    showModal: false,\n    user: null, // user for who we want to get followers for\n    modalFollowers: null, // true if modal displays followers, false for following list\n  };\n\n  componentDidMount() {\n    if (this.props.token) {\n      this.props.getProfileInfo(this.props.token);\n    }\n  }\n\n  followHandleClick = (event) => {\n    const header = {\n      headers: {\n        Authorization: \"Token \" + this.props.token,\n      },\n    };\n    console.log(this.props.token);\n    const url = \"user/\" + event.target.value + \"/follow\";\n    axios\n      .get(url, header)\n      .then((response) => {\n        console.log(response.data.follow);\n        alert(response.data.follow);\n      })\n      .catch((err) => {\n        console.log(err.response);\n      });\n  };\n\n  // Clicking on follow/followers will display list in modal\n  showModalHandler = (user, getFollowers) => {\n    let currentState = this.state.showModal;\n    this.setState({\n      showModal: !currentState,\n      user: user,\n      modalFollowers: getFollowers,\n    });\n\n    this.props.getFollowers(user, getFollowers);\n  };\n\n  hideModalHandler = () => {\n    this.setState({\n      showModal: false,\n      user: null,\n      modalFollowers: null,\n    });\n  };\n\n  render() {\n    let modal;\n    if (this.state.showModal && !this.props.followersLoading) {\n      modal = (\n        <Modal\n          show=\"true\"\n          closed={this.hideModalHandler}\n          showFollowers=\"true\"\n        />\n      );\n    }\n\n    return (\n      <div className={classes.Wrapper}>\n        <div className={classes.Header}>\n          <img\n            src={this.props.profileInfo.profile_pic}\n            className={classes.ProfilePic}\n            alt=\"profile-pic\"\n          />\n          <p className={classes.FullName}>{this.props.profileInfo.full_name}</p>\n          <p className={classes.Username}>@{this.props.profileInfo.username}</p>\n          <table className={classes.Table}>\n            <tbody>\n              <tr>\n                <td\n                  onClick={() =>\n                    this.showModalHandler(this.props.profileInfo.username, true)\n                  }\n                  className={classes.TableTop}\n                >\n                  {this.props.profileInfo.followers}\n                </td>\n                <td\n                  onClick={() =>\n                    this.showModalHandler(\n                      this.props.profileInfo.username,\n                      false\n                    )\n                  }\n                  className={classes.TableTop}\n                >\n                  {this.props.profileInfo.following}\n                </td>\n              </tr>\n              <tr>\n                <td>Followers</td>\n                <td>Following</td>\n              </tr>\n            </tbody>\n          </table>\n          <button\n            className={classes.FollowButton}\n            onClick={this.followHandleClick}\n            value={this.props.profileInfo.username}\n          >\n            {\" \"}\n            Follow\n          </button>\n          <div className={classes.BioDiv}>{this.props.profileInfo.bio}</div>\n        </div>\n\n        {modal}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    followersLoading: state.getFollowers.loading,\n    myProfileInfo: state.profileInfo,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getFollowers: (user, getFollowers) =>\n      dispatch(actions.getFollowers(user, getFollowers)),\n    getProfileInfo: (token) => dispatch(actions.profileInfo(token)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}